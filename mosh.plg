<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY name        "mosh">
<!ENTITY author      "coppit">
<!ENTITY version     "2015.09.04">
<!ENTITY pluginURL   "https://github.com/coppit/unraid-mosh/raw/master/mosh.plg">
<!ENTITY pkgversion  "1.2.4">
<!ENTITY gitURL      "https://raw.githubusercontent.com/&author;/unraid-mosh/master">
<!ENTITY plugdir     "/usr/local/emhttp/plugins/&name;">
<!ENTITY pkgdir      "/boot/packages">
<!ENTITY pkghost     "&gitURL;/packages">

<!ENTITY moshpkg     "mosh-&pkgversion;-x86_64-1_slack.txz">
<!ENTITY moshpkgmd5  "cf54707796849ee0206385082c9538ec">

<!ENTITY pbufpkg     "protobuf-2.6.1-x86_64-3_slack.txz">
<!ENTITY pbufpkgmd5  "1cee3a5c6a4434ded1d9065557a9b82a">

<!ENTITY utemppkg    "utempter-1.1.5-x86_64-1.txz">
<!ENTITY utemppkgmd5 "dbbe884ebb29b830e4032cc41c3f679a">

<!ENTITY iconfile    "mosh.png">
<!ENTITY iconfilemd5 "7c3403cdca386e4af91e6576860dc547">
]>

<PLUGIN  name="&name;"
         author="&author;"
         version="&version;"
         pluginURL="&pluginURL;">

<CHANGES>
##&name;

Warning! Uninstalling NerdPack will break this plugin. If that happens, reboot your server or reinstall this plugin.

###2015.09.04
- Add missing libutempter prerequisite
- Store packages in github for better reliability

###2015.07.21
- Add additional documentation

###2015.07.20
- Initial unRAID V6 release.
</CHANGES>

<!--

This plugin provides Mosh support for unRAID systems.

-->

<!--
create plugin README.md file
-->
<FILE Name="&plugdir;/README.md">
<INLINE>
###Mosh###

Installs Mosh, the mobile shell. Mosh is an improved SSH, with better responsiveness and reliability.
You can sleep your laptop for a week, come back, and your connection will still be there.

After installing this plugin, visit http://mosh.mit.edu/ and install a client on the computer
that you wish to connect to the server with.
</INLINE>
</FILE>

<!--
Install prerequisites.
-->
<FILE Name="&pkgdir;/&pbufpkg;" Run="upgradepkg --install-new">
<URL>&pkghost;/&pbufpkg;</URL>
<MD5>&pbufpkgmd5;</MD5>
</FILE>

<FILE Name="&pkgdir;/&utemppkg;" Run="/sbin/upgradepkg --install-new">
<URL>&pkghost;/&utemppkg;</URL>
<MD5>&utemppkgmd5;</MD5>
</FILE>

<!--
Get the mosh package.
-->
<FILE Name="&pkgdir;/&moshpkg;" Run="upgradepkg --install-new">
<URL>&pkghost;/&moshpkg;</URL>
<MD5>&moshpkgmd5;</MD5>
</FILE>

<!--
Fetch an icon
-->
<FILE Name="&plugdir;/&iconfile;">
<URL>&gitURL;/&iconfile;</URL>
<MD5>&iconfilemd5;</MD5>
</FILE>

<!--
The 'post-install' script.
-->
<FILE Run="/bin/bash">
<INLINE>
echo ""
echo "-----------------------------------------------------------"
echo " &name; has been installed."
echo " Copyright 2015, David Coppit &lt;david@coppit.org&gt;"
echo " Version: &version;"
echo "-----------------------------------------------------------"
echo ""
</INLINE>
</FILE>

<!--
The 'remove' script.
-->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
echo "+=============================================================================="
echo "| Uninstalling packages"
echo "+=============================================================================="

# Delete the package, and any old package files too
rm -f $(ls &pkgdir;/&name;*.txz 2>/dev/null)

# Delete the prerequisite packages
rm -f &pkgdir;/&pbufpkg;
rm -f &pkgdir;/&utemppkg;

# Uninstall the package
removepkg $(basename &moshpkg; .txz) | grep -v -e '  --&gt; Deleting'

# Don't uninstall the prerequisites, in case some other plug is using them. On reboot, they'll get "removed" if no plugin
# needs them, or will be re-downloaded and reinstalled by some plugin that does need them.
#removepkg $(basename &pbufpkg; .txz) &utemppkg; .txz) | grep -v -e '  --&gt; Deleting'
#removepkg $(basename &utemppkg; .txz) | grep -v -e '  --&gt; Deleting'

echo ""
echo ""

echo "+=============================================================================="
echo "| Deleting &plugdir;"
echo "+=============================================================================="

# Remove plugin.
rm -rf &plugdir;

echo ""
echo ""
</INLINE>
</FILE>

</PLUGIN>
